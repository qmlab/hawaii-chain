// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Sender               string   `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Recipient            string   `protobuf:"bytes,3,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	Val                  float32  `protobuf:"fixed32,4,opt,name=Val,proto3" json:"Val,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_528d6bd509b362bb, []int{0}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Transaction) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Transaction) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *Transaction) GetVal() float32 {
	if m != nil {
		return m.Val
	}
	return 0
}

func (m *Transaction) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Block struct {
	Index                int32    `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	PrevHash             string   `protobuf:"bytes,3,opt,name=PrevHash,proto3" json:"PrevHash,omitempty"`
	Proof                int64    `protobuf:"varint,4,opt,name=Proof,proto3" json:"Proof,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Txs                  *Tree    `protobuf:"bytes,6,opt,name=Txs,proto3" json:"Txs,omitempty"`
	Results              *Tree    `protobuf:"bytes,7,opt,name=Results,proto3" json:"Results,omitempty"`
	Status               *Tree    `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_528d6bd509b362bb, []int{1}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Block) GetProof() int64 {
	if m != nil {
		return m.Proof
	}
	return 0
}

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetTxs() *Tree {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *Block) GetResults() *Tree {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *Block) GetStatus() *Tree {
	if m != nil {
		return m.Status
	}
	return nil
}

type User struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_528d6bd509b362bb, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type Chain struct {
	Blocks               []*Block       `protobuf:"bytes,1,rep,name=Blocks,proto3" json:"Blocks,omitempty"`
	OpenTxs              []*Transaction `protobuf:"bytes,2,rep,name=OpenTxs,proto3" json:"OpenTxs,omitempty"`
	Difficulty           int32          `protobuf:"varint,3,opt,name=Difficulty,proto3" json:"Difficulty,omitempty"`
	Usr                  *User          `protobuf:"bytes,4,opt,name=Usr,proto3" json:"Usr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_528d6bd509b362bb, []int{3}
}
func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (dst *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(dst, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *Chain) GetOpenTxs() []*Transaction {
	if m != nil {
		return m.OpenTxs
	}
	return nil
}

func (m *Chain) GetDifficulty() int32 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *Chain) GetUsr() *User {
	if m != nil {
		return m.Usr
	}
	return nil
}

func init() {
	proto.RegisterType((*Transaction)(nil), "pb.Transaction")
	proto.RegisterType((*Block)(nil), "pb.Block")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*Chain)(nil), "pb.Chain")
}

func init() { proto.RegisterFile("blockchain.proto", fileDescriptor_blockchain_528d6bd509b362bb) }

var fileDescriptor_blockchain_528d6bd509b362bb = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0x6e, 0xe2, 0x30,
	0x10, 0x87, 0xe5, 0x84, 0x04, 0x18, 0x24, 0x16, 0x8d, 0x56, 0x2b, 0x2b, 0x5a, 0xad, 0xb2, 0x39,
	0x65, 0x2f, 0x1c, 0xd8, 0x27, 0xe8, 0x9f, 0x43, 0x39, 0x15, 0x99, 0xd0, 0xbb, 0x93, 0x18, 0x61,
	0x35, 0x24, 0x91, 0x6d, 0x2a, 0x7a, 0xee, 0x13, 0xf4, 0x19, 0xfb, 0x22, 0x95, 0x9d, 0x00, 0x15,
	0x87, 0xde, 0x66, 0xbe, 0xdf, 0xc8, 0xf9, 0x3c, 0x0e, 0xcc, 0xf2, 0xaa, 0x29, 0x9e, 0x8b, 0x1d,
	0x97, 0xf5, 0xbc, 0x55, 0x8d, 0x69, 0xd0, 0x6b, 0xf3, 0x68, 0xda, 0x72, 0xa3, 0x64, 0x21, 0x79,
	0xc7, 0x92, 0x37, 0x02, 0x93, 0x4c, 0xf1, 0x5a, 0xf3, 0xc2, 0xc8, 0xa6, 0xc6, 0x29, 0x78, 0xcb,
	0x92, 0x92, 0x98, 0xa4, 0x63, 0xe6, 0x2d, 0x4b, 0xfc, 0x05, 0xe1, 0x5a, 0xd4, 0xa5, 0x50, 0xd4,
	0x73, 0xac, 0xef, 0xf0, 0x37, 0x8c, 0x99, 0x28, 0x64, 0x2b, 0x45, 0x6d, 0xa8, 0xef, 0xa2, 0x0b,
	0xc0, 0x19, 0xf8, 0x4f, 0xbc, 0xa2, 0x83, 0x98, 0xa4, 0x1e, 0xb3, 0xa5, 0x9d, 0xcf, 0xe4, 0x5e,
	0x68, 0xc3, 0xf7, 0x2d, 0x0d, 0x62, 0x92, 0xfa, 0xec, 0x02, 0x92, 0x0f, 0x02, 0xc1, 0xad, 0xd5,
	0xc5, 0x9f, 0x10, 0x2c, 0xeb, 0x52, 0x1c, 0x9d, 0x42, 0xc0, 0xba, 0x06, 0x11, 0x06, 0x0f, 0x5c,
	0xef, 0x7a, 0x07, 0x57, 0x63, 0x04, 0xa3, 0x95, 0x12, 0x2f, 0x8e, 0x77, 0x02, 0xe7, 0xde, 0x9e,
	0xb2, 0x52, 0x4d, 0xb3, 0x75, 0x06, 0x3e, 0xeb, 0x9a, 0xef, 0x1d, 0x30, 0x02, 0x3f, 0x3b, 0x6a,
	0x1a, 0xc6, 0x24, 0x9d, 0x2c, 0x46, 0xf3, 0x36, 0x9f, 0x67, 0x4a, 0x08, 0x66, 0x21, 0x26, 0x30,
	0x64, 0x42, 0x1f, 0x2a, 0xa3, 0xe9, 0xf0, 0x2a, 0x3f, 0x05, 0x18, 0x43, 0xb8, 0x36, 0xdc, 0x1c,
	0x34, 0x1d, 0x5d, 0x8d, 0xf4, 0x3c, 0x89, 0x60, 0xb0, 0xd1, 0x42, 0xd9, 0xdb, 0xdc, 0x94, 0xa5,
	0xea, 0xb7, 0xec, 0xea, 0xe4, 0x9d, 0x40, 0x70, 0x67, 0xdf, 0x0a, 0xff, 0x42, 0xe8, 0x56, 0xa1,
	0x29, 0x89, 0xfd, 0x74, 0xb2, 0x18, 0xdb, 0x73, 0x1c, 0x61, 0x7d, 0x80, 0xff, 0x60, 0xf8, 0xd8,
	0x8a, 0xda, 0xea, 0x7a, 0x6e, 0xe6, 0x47, 0xf7, 0xad, 0xf3, 0x33, 0xb2, 0x53, 0x8e, 0x7f, 0x00,
	0xee, 0xe5, 0x76, 0x2b, 0x8b, 0x43, 0x65, 0x5e, 0xdd, 0x9e, 0x02, 0xf6, 0x85, 0xd8, 0x5b, 0x6f,
	0xb4, 0x72, 0x7b, 0xea, 0x95, 0xad, 0x22, 0xb3, 0x30, 0x0f, 0xdd, 0x2f, 0xf2, 0xff, 0x33, 0x00,
	0x00, 0xff, 0xff, 0x6e, 0xc5, 0x85, 0x26, 0x4a, 0x02, 0x00, 0x00,
}
